/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linked.list;

import org.junit.Test;
import static org.junit.Assert.*;

public class LibraryTest {

    @Test public void testAppend1(){
        LinkedList test = new LinkedList();
        test.append(1);
        test.append(2);
        test.append(3);
        test.append(4);
        assertEquals("[ 1 ] -> [ 2 ] -> [ 3 ] -> [ 4 ] -> Null :)" , test.converToString());
    }

    @Test public void testInsertAfterHead(){
        LinkedList testList = new LinkedList();
        testList.append(-11);
        testList.append(2);
        testList.append(5);
        testList.append(10);
        testList.insertAfter(-11 , 17);
        assertEquals("[ -11 ] -> [ 17 ] -> [ 2 ] -> [ 5 ] -> [ 10 ] -> Null :)" , testList.converToString());
    }

    @Test public void testInsertBeforeHead(){
        LinkedList testList = new LinkedList();
        testList.append(-11);
        testList.append(2);
        testList.append(5);
        testList.append(10);
        testList.insertBefore(-11 , 17);
        assertEquals("[ -11 ] -> [ 2 ] -> [ 5 ] -> [ 10 ] -> Null :)" , testList.converToString());
    }

    @Test public void testAppend2(){
        LinkedList testList = new LinkedList();
        testList.append(1);
        testList.append(2);
        testList.append(3);
        assertEquals("[ 1 ] -> [ 2 ] -> [ 3 ] -> Null :)" , testList.converToString());

    }

    @Test public void testBefore(){
        LinkedList test = new LinkedList();
        test.append(1);
        test.append(2);
        test.append(3);
        test.append(4);
        test.insertBefore(3,5);
        assertEquals("[ 1 ] -> [ 2 ] -> [ 5 ] -> [ 3 ] -> [ 4 ] -> Null :)" , test.converToString());
    }

    @Test public void testAfter(){
        LinkedList test = new LinkedList();
        test.append(1);
        test.append(2);
        test.append(3);
        test.append(4);
        test.insertAfter(3,5);
        assertEquals("[ 1 ] -> [ 2 ] -> [ 3 ] -> [ 5 ] -> [ 4 ] -> Null :)" , test.converToString());
    }

    @Test public void testinsert(){
        LinkedList test = new LinkedList();
        test.insert(5);
        test.insert(4);
        test.insert(3);
        test.insert(2);
        test.insert(1);
        assertEquals("[ 1 ] -> [ 2 ] -> [ 3 ] -> [ 4 ] -> [ 5 ] -> Null :)" , test.converToString());
    }

    @Test public void testinsert2(){
        LinkedList test = new LinkedList();
        test.insert(50);
        test.insert(40);
        test.insert(30);
        test.insert(20);
        test.insert(10);
        assertEquals("[ 10 ] -> [ 20 ] -> [ 30 ] -> [ 40 ] -> [ 50 ] -> Null :)" , test.converToString());
    }

    @Test public void testinsert(){
        LinkedList test = new LinkedList();
        test.insert(5);
        test.insert(4);
        test.insert(3);
        test.insert(2);
        test.insert(1);
        assertEquals("false" , test.isInclude(13));
    }

    @Test public void testinsert(){
        LinkedList test = new LinkedList();
        test.insert(5);
        test.insert(4);
        test.insert(3);
        test.insert(2);
        test.insert(1);
        assertEquals("true" , test.isInclude(1));
    }


}
